{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\srust\\\\Desktop\\\\testovoe\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\srust\\\\Desktop\\\\testovoe\\\\my-app\\\\src\\\\components\\\\searchField.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nexport default function Grouped() {\n  const options = top100Films.map(option => {\n    const firstLetter = option.title[0].toUpperCase();\n    return _objectSpread({\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter\n    }, option);\n  });\n  return React.createElement(Autocomplete, {\n    id: \"grouped-demo\",\n    options: options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter)),\n    groupBy: option => option.firstLetter,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300\n    },\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"With categories\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n} // Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\n\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["C:/Users/srust/Desktop/testovoe/my-app/src/components/searchField.js"],"names":["React","TextField","Autocomplete","useAutocomplete","Grouped","options","top100Films","map","option","firstLetter","title","toUpperCase","test","sort","a","b","localeCompare","width","params","year"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete'\r\nexport default function Grouped() {\r\n  const options = top100Films.map(option => {\r\n    const firstLetter = option.title[0].toUpperCase();\r\n    return {\r\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\r\n      ...option,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"grouped-demo\"\r\n      options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\r\n      groupBy={option => option.firstLetter}\r\n      getOptionLabel={option => option.title}\r\n      style={{ width: 300 }}\r\n      renderInput={params => (\r\n        <TextField {...params} label=\"With categories\" variant=\"outlined\" fullWidth />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst top100Films = [\r\n  { title: 'The Shawshank Redemption', year: 1994 },\r\n  { title: 'The Godfather', year: 1972 },\r\n  { title: 'The Godfather: Part II', year: 1974 },\r\n  { title: 'The Dark Knight', year: 2008 },\r\n  { title: '12 Angry Men', year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: 'Pulp Fiction', year: 1994 },\r\n  { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { title: 'Fight Club', year: 1999 },\r\n  { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { title: 'Forrest Gump', year: 1994 },\r\n  { title: 'Inception', year: 2010 },\r\n  { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: 'Goodfellas', year: 1990 },\r\n  { title: 'The Matrix', year: 1999 },\r\n  { title: 'Seven Samurai', year: 1954 },\r\n  { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n  { title: 'City of God', year: 2002 },\r\n  { title: 'Se7en', year: 1995 },\r\n  { title: 'The Silence of the Lambs', year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: 'Life Is Beautiful', year: 1997 },\r\n  { title: 'The Usual Suspects', year: 1995 },\r\n  { title: 'Léon: The Professional', year: 1994 },\r\n  { title: 'Spirited Away', year: 2001 },\r\n  { title: 'Saving Private Ryan', year: 1998 },\r\n  { title: 'Once Upon a Time in the West', year: 1968 },\r\n  { title: 'American History X', year: 1998 },\r\n  { title: 'Interstellar', year: 2014 },\r\n  { title: 'Casablanca', year: 1942 },\r\n  { title: 'City Lights', year: 1931 },\r\n  { title: 'Psycho', year: 1960 },\r\n  { title: 'The Green Mile', year: 1999 },\r\n  { title: 'The Intouchables', year: 2011 },\r\n  { title: 'Modern Times', year: 1936 },\r\n  { title: 'Raiders of the Lost Ark', year: 1981 },\r\n  { title: 'Rear Window', year: 1954 },\r\n  { title: 'The Pianist', year: 2002 },\r\n  { title: 'The Departed', year: 2006 },\r\n  { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n  { title: 'Back to the Future', year: 1985 },\r\n  { title: 'Whiplash', year: 2014 },\r\n  { title: 'Gladiator', year: 2000 },\r\n  { title: 'Memento', year: 2000 },\r\n  { title: 'The Prestige', year: 2006 },\r\n  { title: 'The Lion King', year: 1994 },\r\n  { title: 'Apocalypse Now', year: 1979 },\r\n  { title: 'Alien', year: 1979 },\r\n  { title: 'Sunset Boulevard', year: 1950 },\r\n  { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n  { title: 'The Great Dictator', year: 1940 },\r\n  { title: 'Cinema Paradiso', year: 1988 },\r\n  { title: 'The Lives of Others', year: 2006 },\r\n  { title: 'Grave of the Fireflies', year: 1988 },\r\n  { title: 'Paths of Glory', year: 1957 },\r\n  { title: 'Django Unchained', year: 2012 },\r\n  { title: 'The Shining', year: 1980 },\r\n  { title: 'WALL·E', year: 2008 },\r\n  { title: 'American Beauty', year: 1999 },\r\n  { title: 'The Dark Knight Rises', year: 2012 },\r\n  { title: 'Princess Mononoke', year: 1997 },\r\n  { title: 'Aliens', year: 1986 },\r\n  { title: 'Oldboy', year: 2003 },\r\n  { title: 'Once Upon a Time in America', year: 1984 },\r\n  { title: 'Witness for the Prosecution', year: 1957 },\r\n  { title: 'Das Boot', year: 1981 },\r\n  { title: 'Citizen Kane', year: 1941 },\r\n  { title: 'North by Northwest', year: 1959 },\r\n  { title: 'Vertigo', year: 1958 },\r\n  { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n  { title: 'Reservoir Dogs', year: 1992 },\r\n  { title: 'Braveheart', year: 1995 },\r\n  { title: 'M', year: 1931 },\r\n  { title: 'Requiem for a Dream', year: 2000 },\r\n  { title: 'Amélie', year: 2001 },\r\n  { title: 'A Clockwork Orange', year: 1971 },\r\n  { title: 'Like Stars on Earth', year: 2007 },\r\n  { title: 'Taxi Driver', year: 1976 },\r\n  { title: 'Lawrence of Arabia', year: 1962 },\r\n  { title: 'Double Indemnity', year: 1944 },\r\n  { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n  { title: 'Amadeus', year: 1984 },\r\n  { title: 'To Kill a Mockingbird', year: 1962 },\r\n  { title: 'Toy Story 3', year: 2010 },\r\n  { title: 'Logan', year: 2017 },\r\n  { title: 'Full Metal Jacket', year: 1987 },\r\n  { title: 'Dangal', year: 2016 },\r\n  { title: 'The Sting', year: 1973 },\r\n  { title: '2001: A Space Odyssey', year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: 'Toy Story', year: 1995 },\r\n  { title: 'Bicycle Thieves', year: 1948 },\r\n  { title: 'The Kid', year: 1921 },\r\n  { title: 'Inglourious Basterds', year: 2009 },\r\n  { title: 'Snatch', year: 2000 },\r\n  { title: '3 Idiots', year: 2009 },\r\n  { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}